 {-# STDLIB_VERSION 5     #-}
 {-# SCRIPT_TYPE ACCOUNT  #-}
 {-# CONTENT_TYPE DAPP    #-}

 let assetA = base58''
 let loanFeePercent = 5

 @Callable(i)
 func loan(amount: Int, callback: String, borrower: ByteVector) = {
   strict startBalance = this.assetBalance(assetA)
   strict r = invoke(Address(borrower), callback, [amount, i.caller.bytes], [AttachedPayment(assetA, amount)])

   let balanceDiff = this.assetBalance(assetA) - startBalance
   let profit      = amount.fraction(loanFeePercent, 100)

   if (balanceDiff < profit)
     then
       throw("debt is not paid: diff=" + balanceDiff.toString() + ", expected=" + profit.toString())
     else
       []
 }
